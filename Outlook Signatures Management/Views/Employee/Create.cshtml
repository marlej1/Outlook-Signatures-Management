@model Outlook_Signatures_Management.Models.Employee

@{
    ViewBag.Title = "Create";
}



<div class="container">
    <div class="row">
        <div class="col-xs-11"></div>
        <div class="col-xs-1">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" style="margin-top:20px" aria-haspopup="true" aria-expanded="false"><i class="fas fa-plus"></i></button>
                <ul class="dropdown-menu">
                    <li><a data-toggle="modal" data-target="#createEmployeeModal" href="#">Add Manually</a></li>
                    <li><a href="#">Import from Excel</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row">
    <div class="col-xs-2"></div>
    <div class="col-xs-10">
        @Html.Action("Index");
        </div>
    </div>

    <div class="modal fade" id="createEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Add a new employee</h3>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        @using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { id = "userForm" }))
                        {
                            <div class="row">
                                <div class="col-xs-7">

                                    <h3>Personal Details</h3>

                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DeparmentList as SelectList)
                                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FaxNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.FaxNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FaxNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-5">
                                    <h3>Signatures</h3>

                                    <div class="form-group">
                                        <label for="DefaultSignatureDropDown">Default Signature</label>
                                        @Html.DropDownListFor(model => model.DefaultSignatureId, ViewBag.SignatureList as SelectList, "Empty Signature", new { id = "DefaultSignatureDropDown", style = "display:block;", @class = "form-control" })
                                    </div>

                                    <div class="form-group">
                                        <label for="DefaultSignatureDropDown">Forward/Reply Signature</label>
                                        @Html.DropDownListFor(model => model.ForwardReplySignatureId, ViewBag.SignatureList as SelectList, "Empty Signature", new { id = "ForwardReplySignatureDropDown", style = "display:block;", @class = "form-control" })
                                    </div>

                                </div>

                            </div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="reset" value="Save Changes" id="submitbtn" class="btn btn-primary" />
                </div>

            </div>


        </div>
    </div>
</div>







    <div class="modal fade" id="ShowEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">

                </div>
                <div class="modal-body" id="ShowEmployeeModalBody">


                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="reset" value="Save Changes" id="SaveChangesbtn" class="btn btn-primary" />
                </div>
            </div>

        </div>
    </div>

</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        let OpenEmployeeDetails = function (employeeId) {

            $.ajax(
                {
                    type: "GET",
                    data: { employeeId: employeeId },
                    url: "/Employee/Edit",
                    success: function (response) {
                        $("#ShowEmployeeModalBody").html(response);
                        $("#ShowEmployeeModal").modal("show");


                    }
                }
            )
        }

        let showConfirmDeleteModal = function (employeeId) {
            $('#hiddenId').val(employeeId);
        }


        $(document).ready(function () {




            $('#deleteBtn').on('click', function () {

                let EmployeeId = $('#hiddenId').val();
                $.ajax(
                    {
                        type: "POST",
                        data: { employeeId: EmployeeId },
                        url: "/Employee/Delete",
                        success: function () {

                            $("#confirmModal").modal("hide");
                            $("#row_" + EmployeeId).remove();

                        }
                    }
                )
            })

            $('#submitbtn').on('click', function () {
                var formData = $('#userForm').serialize();
                
                $.ajax(
                    {
                        type: "POST",
                        data: formData,
                        url: "/Employee/Create",
                        success: function (response) {

                            var ThirdRd = "<td> <div class='btn-group'><button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\<ul class=\"dropdown-menu\"><li><a data-toggle=\"modal\" onclick=\"OpenEmployeeDetails(" + response.EmployeeId + ")\" href=\"#\">Open</a></li><li><a href=\"#\">Copy</a></li><li><a href=\"#\" data - toggle=\"modal\" data - target=\"#confirmModal\" id = \"showConfirmDeleteBtn\" onclick = \"showConfirmDeleteModal(" + response.EmployeeId + ")\" > Delete</a ></li ></ul> </div></td>"

                            $('#EmployeeTable').append("<tr><td>" + response.DisplayName + "</td><td>" + response.Email + "</td>" + ThirdRd + "</tr>");
                            $("#createEmployeeModal").modal("hide");

                        }
                    }

                )


            })


            $('#SaveChangesbtn').on('click', function () {
                var formData = $('#userSaveForm').serialize();
                $.ajax(
                    {
                        type: "POST",
                        data: formData,
                        url: "/Employee/Edit",
                        success: function (response) {



                            $("#row_" + response.EmployeeId + " td:nth-child(1)").html(response.DisplayName);
                            $("#row_" + response.EmployeeId + " td:nth-child(2)").html(response.Email);


                            $("#ShowEmployeeModal").modal("hide");

                        }
                    }
                )
            })

        })
    </script>
}
